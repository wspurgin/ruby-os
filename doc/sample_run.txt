$ ./exe/ruby-os
Initializing Queues
Ready Queue: <Queue: []>
Waiting Queue: <Queue: []>
This is RubyOS, a simulated OS written in Ruby âœ“
Enter Commands (enter help for usage)
>add_proc
Enter process id
>1
Enter starting address (e.g. 0x2) (hit enter to use default)
>
Enter process' priority (hit enter to use default of 4)
>
Enter process' remaining processing time (hit enter to use default of 8)
>10
Which queue do you want to add the process to? ('waiting', or 'ready')
>ready
Enter the position you wish to insert the process (hit enter to use the default location)
>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Waiting Queue: <Queue: []>
Enter Commands (enter help for usage)
>add_proc
Enter process id
>2
Enter starting address (e.g. 0x2) (hit enter to use default)
>
Enter process' priority (hit enter to use default of 4)
>dalkjgw
Value entered is not an integer, please enter integer value
>3
Enter process' remaining processing time (hit enter to use default of 8)
>5
Which queue do you want to add the process to? ('waiting', or 'ready')
>ANYOFTHEM!!
Unrecognized queue 'ANYOFTHEM!!', please enter a valid queue (ready,waiting)
>ready
Enter the position you wish to insert the process (hit enter to use the default location)
>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=2 remaining=5 priority=3>]>
Waiting Queue: <Queue: []>
Enter Commands (enter help for usage)
>add_proc
Enter process id
>3
Enter starting address (e.g. 0x2) (hit enter to use default)
>
Enter process' priority (hit enter to use default of 4)
>
Enter process' remaining processing time (hit enter to use default of 8)
>
Which queue do you want to add the process to? ('waiting', or 'ready')
>ready
Enter the position you wish to insert the process (hit enter to use the default location)
>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=2 remaining=5 priority=3>, <PCB pid=3 remaining=8 priority=4>]>
Waiting Queue: <Queue: []>
Enter Commands (enter help for usage)
>help
The following are the accepted commands:
help        - prints this usuage guide
add_proc    - interactively adds a process to a queue
delete_proc - interactively remove a process from a queue
show_queues - prints queues to STDOUT
simulate [scheduler] - runs simulation with the given scheduler. Choices are sjf, robin, priority. Default is sjf.
exit        - quits the program
quit        - alias for exit
Enter Commands (enter help for usage)
>simulate priority
Beginning simulation with RubyOS::PriorityScheduler
Max iterations calculated from process time: 260
Current Proc in CPU: <PCB pid=2 remaining=4 priority=3>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=2 remaining=3 priority=3>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=2 remaining=2 priority=3>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=2 remaining=1 priority=3>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=3 remaining=8 priority=4>]>
<PCB pid=2 remaining=0 priority=3> Completed
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=3 remaining=8 priority=4>]>
Perfroming context switch with <PCB pid=1 remaining=10 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=9 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=8 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=7 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=6 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=5 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=4 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=3 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=2 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Current Proc in CPU: <PCB pid=1 remaining=1 priority=4>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
<PCB pid=1 remaining=0 priority=4> Completed
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>]>
Perfroming context switch with <PCB pid=3 remaining=8 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=7 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=6 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=5 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=4 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=3 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=2 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=1 priority=4>
<PCB pid=3 remaining=0 priority=4> Completed
Completed Procs: [<PCB pid=2 remaining=0 priority=3>, <PCB pid=1 remaining=0 priority=4>, <PCB pid=3 remaining=0 priority=4>]


The Results using the RubyOS::PriorityScheduler are here:
Average Wait Time: 6 time units
Average Context Switches per Process: 0.6666666666666666
Total Number of Context Switches: 2
Total Processes: 3
Total Completed Procs: 3
Enter Commands (enter help for usage)
>show_queues
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>, <PCB pid=2 remaining=5 priority=3>, <PCB pid=3 remaining=8 priority=4>]>
Waiting Queue: <Queue: []>
Enter Commands (enter help for usage)
>simulate sjf
Beginning simulation with RubyOS::SrptScheduler
Max iterations calculated from process time: 260
Current Proc in CPU: <PCB pid=2 remaining=4 priority=3>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>, <PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=2 remaining=3 priority=3>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>, <PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=2 remaining=2 priority=3>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>, <PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=2 remaining=1 priority=3>
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>, <PCB pid=1 remaining=10 priority=4>]>
<PCB pid=2 remaining=0 priority=3> Completed
Ready Queue: <Queue: [<PCB pid=3 remaining=8 priority=4>, <PCB pid=1 remaining=10 priority=4>]>
Perfroming context switch with <PCB pid=3 remaining=8 priority=4>
Current Proc in CPU: <PCB pid=3 remaining=7 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=3 remaining=6 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=3 remaining=5 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=3 remaining=4 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=3 remaining=3 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=3 remaining=2 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Current Proc in CPU: <PCB pid=3 remaining=1 priority=4>
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
<PCB pid=3 remaining=0 priority=4> Completed
Ready Queue: <Queue: [<PCB pid=1 remaining=10 priority=4>]>
Perfroming context switch with <PCB pid=1 remaining=10 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=9 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=8 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=7 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=6 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=5 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=4 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=3 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=2 priority=4>
Current Proc in CPU: <PCB pid=1 remaining=1 priority=4>
<PCB pid=1 remaining=0 priority=4> Completed
Completed Procs: [<PCB pid=2 remaining=0 priority=3>, <PCB pid=3 remaining=0 priority=4>, <PCB pid=1 remaining=0 priority=4>]


The Results using the RubyOS::SrptScheduler are here:
Average Wait Time: 6 time units
Average Context Switches per Process: 0.6666666666666666
Total Number of Context Switches: 2
Total Processes: 3
Total Completed Procs: 3
Enter Commands (enter help for usage)
>exit
